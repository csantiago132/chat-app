{
  "remainingRequest": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/components/CreateChatRoom/CreateChatRoom.tsx",
  "dependencies": [
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/components/CreateChatRoom/CreateChatRoom.tsx",
      "mtime": 1542041816945
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1541429074980
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1538779637905
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-docgen-typescript-loader/dist/index.js",
      "mtime": 1541429075984
    }
  ],
  "contextDependencies": [],
  "result": [
    "var _jsxFileName = \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/components/CreateChatRoom/CreateChatRoom.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/**\n * CreateChatRoom component\n *\n * component that creates chat room names\n *\n */\nimport * as React from \"react\";\nimport Styled from \"./styles/Styled\";\n\n/* Input filed that pushes the name of a newly create chat room to firebase */\nvar CreateChatRoom = function CreateChatRoom(props) {\n  var value = props.value,\n      handleChange = props.handleChange,\n      handleSubmit = props.handleSubmit,\n      isDisabled = props.isDisabled;\n  return React.createElement(Styled.Form, {\n    className: \"create-chat-room\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Styled.Label, {\n    htmlFor: \"chatRoom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Enter the name for the new chat room\"), React.createElement(Styled.InputField, {\n    type: \"text\",\n    name: \"chatRoom\",\n    value: value,\n    placeholder: \"Create a new chat\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Styled.Button, {\n    type: \"submit\",\n    buttonState: isDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Create\"));\n};\n\nCreateChatRoom.defaultProps = {\n  isDisabled: true\n};\nvar _default = CreateChatRoom;\nexport default _default;\n\ntry {\n  // @ts-ignore\n  CreateChatRoom.displayName = \"CreateChatRoom\"; // @ts-ignore\n\n  CreateChatRoom.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"CreateChatRoom\",\n    \"props\": {\n      \"isDisabled\": {\n        \"defaultValue\": {\n          value: \"true\"\n        },\n        \"description\": \"Enables or disables the submit button\",\n        \"name\": \"isDisabled\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"handleChange\": {\n        \"defaultValue\": null,\n        \"description\": \"Sets state for the name of the chatroom name*\",\n        \"name\": \"handleChange\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(args: FormEvent<HTMLInputElement>) => void\"\n        }\n      },\n      \"handleSubmit\": {\n        \"defaultValue\": null,\n        \"description\": \"Event handler that sends information to firebase\",\n        \"name\": \"handleSubmit\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(args: FormEvent<HTMLElement>) => void\"\n        }\n      },\n      \"value\": {\n        \"defaultValue\": null,\n        \"description\": \"The name of the chatroom provided by the state\",\n        \"name\": \"value\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/CreateChatRoom/CreateChatRoom.tsx#CreateChatRoom\"] = {\n      docgenInfo: CreateChatRoom.__docgenInfo,\n      name: \"CreateChatRoom\",\n      path: \"src/components/CreateChatRoom/CreateChatRoom.tsx#CreateChatRoom\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CreateChatRoom, \"CreateChatRoom\", \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/components/CreateChatRoom/CreateChatRoom.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/components/CreateChatRoom/CreateChatRoom.tsx\");\n  leaveModule(module);\n})();\n\n;",
    {
      "version": 3,
      "sources": [
        "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/components/CreateChatRoom/CreateChatRoom.tsx"
      ],
      "names": [
        "React",
        "Styled",
        "CreateChatRoom",
        "props",
        "value",
        "handleChange",
        "handleSubmit",
        "isDisabled",
        "defaultProps",
        "displayName",
        "__docgenInfo",
        "STORYBOOK_REACT_CLASSES",
        "docgenInfo",
        "name",
        "path",
        "__react_docgen_typescript_loader_error"
      ],
      "mappings": ";;;;;;;;AAAA;;;;;;AAOA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAqBA;AACA,IAAMC,cAA+C,GAAG,SAAlDA,cAAkD,CAACC,KAAD,EAAW;AAAA,MACzDC,KADyD,GACPD,KADO,CACzDC,KADyD;AAAA,MAClDC,YADkD,GACPF,KADO,CAClDE,YADkD;AAAA,MACpCC,YADoC,GACPH,KADO,CACpCG,YADoC;AAAA,MACtBC,UADsB,GACPJ,KADO,CACtBI,UADsB;AAEjE,SACE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,SAAS,EAAC,kBAAvB;AAA0C,IAAA,QAAQ,EAAED,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,OAAO,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAIE,oBAAC,MAAD,CAAQ,UAAR;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,WAAW,EAAC,mBAJd;AAKE,IAAA,QAAQ,EAAEC,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,WAAW,EAAEE,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;AAiBD,CAnBD;;AAqBAL,cAAc,CAACM,YAAf,GAA8B;AAC5BD,EAAAA,UAAU,EAAE;AADgB,CAA9B;eAIeL,c;AAAf;;AACA,IAAI;AACA;AACAA,EAAAA,cAAc,CAACO,WAAf,GAA6B,gBAA7B,CAFA,CAGA;;AACAP,EAAAA,cAAc,CAACQ,YAAf,GAA8B;AAAE,mBAAe,EAAjB;AAAqB,mBAAe,gBAApC;AAAsD,aAAS;AAAE,oBAAc;AAAE,wBAAgB;AAAEN,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAqC,uBAAe,uCAApD;AAA6F,gBAAQ,YAArG;AAAmH,oBAAY,IAA/H;AAAqI,gBAAQ;AAAE,kBAAQ;AAAV;AAA7I,OAAhB;AAAsL,sBAAgB;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,+CAAvC;AAAwF,gBAAQ,cAAhG;AAAgH,oBAAY,IAA5H;AAAkI,gBAAQ;AAAE,kBAAQ;AAAV;AAA1I,OAAtM;AAA6Y,sBAAgB;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,kDAAvC;AAA2F,gBAAQ,cAAnG;AAAmH,oBAAY,IAA/H;AAAqI,gBAAQ;AAAE,kBAAQ;AAAV;AAA7I,OAA7Z;AAAkmB,eAAS;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,gDAAvC;AAAyF,gBAAQ,OAAjG;AAA0G,oBAAY,IAAtH;AAA4H,gBAAQ;AAAE,kBAAQ;AAAV;AAApI;AAA3mB;AAA/D,GAA9B,CAJA,CAKA;;AACA,MAAI,OAAOO,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,iEAAD,CAAvB,GAA6F;AAAEC,MAAAA,UAAU,EAAEV,cAAc,CAACQ,YAA7B;AAA2CG,MAAAA,IAAI,EAAE,gBAAjD;AAAmEC,MAAAA,IAAI,EAAE;AAAzE,KAA7F;AACP,CATD,CAUA,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;;;0BApC5Cb,c",
      "sourcesContent": [
        "/**\n * CreateChatRoom component\n *\n * component that creates chat room names\n *\n */\n\nimport * as React from \"react\";\nimport Styled from \"./styles/Styled\";\n\ninterface ICreateChatRoomProps {\n  /**\n   * Enables or disables the submit button\n   */\n  isDisabled: boolean;\n  /**\n   * Sets state for the name of the chatroom name*\n   */\n  handleChange: (args: React.FormEvent<HTMLInputElement>) => void;\n  /**\n   * Event handler that sends information to firebase\n   */\n  handleSubmit: (args: React.FormEvent<HTMLElement>) => void;\n  /**\n   * The name of the chatroom provided by the state\n   */\n  value: string;\n}\n\n/* Input filed that pushes the name of a newly create chat room to firebase */\nconst CreateChatRoom: React.SFC<ICreateChatRoomProps> = (props) => {\n  const { value, handleChange, handleSubmit, isDisabled } = props;\n  return (\n    <Styled.Form className=\"create-chat-room\" onSubmit={handleSubmit}>\n      <Styled.Label htmlFor=\"chatRoom\">\n        Enter the name for the new chat room\n      </Styled.Label>\n      <Styled.InputField\n        type=\"text\"\n        name=\"chatRoom\"\n        value={value}\n        placeholder=\"Create a new chat\"\n        onChange={handleChange}\n      />\n      <Styled.Button type=\"submit\" buttonState={isDisabled}>\n        Create\n      </Styled.Button>\n    </Styled.Form>\n  );\n};\n\nCreateChatRoom.defaultProps = {\n  isDisabled: true\n};\n\nexport default CreateChatRoom;\ntry {\n    // @ts-ignore\n    CreateChatRoom.displayName = \"CreateChatRoom\";\n    // @ts-ignore\n    CreateChatRoom.__docgenInfo = { \"description\": \"\", \"displayName\": \"CreateChatRoom\", \"props\": { \"isDisabled\": { \"defaultValue\": { value: \"true\" }, \"description\": \"Enables or disables the submit button\", \"name\": \"isDisabled\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"handleChange\": { \"defaultValue\": null, \"description\": \"Sets state for the name of the chatroom name*\", \"name\": \"handleChange\", \"required\": true, \"type\": { \"name\": \"(args: FormEvent<HTMLInputElement>) => void\" } }, \"handleSubmit\": { \"defaultValue\": null, \"description\": \"Event handler that sends information to firebase\", \"name\": \"handleSubmit\", \"required\": true, \"type\": { \"name\": \"(args: FormEvent<HTMLElement>) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"The name of the chatroom provided by the state\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/CreateChatRoom/CreateChatRoom.tsx#CreateChatRoom\"] = { docgenInfo: CreateChatRoom.__docgenInfo, name: \"CreateChatRoom\", path: \"src/components/CreateChatRoom/CreateChatRoom.tsx#CreateChatRoom\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"
      ]
    }
  ]
}
