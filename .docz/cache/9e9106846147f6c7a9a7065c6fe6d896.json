{
  "remainingRequest": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/App/index.tsx",
  "dependencies": [
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/App/index.tsx",
      "mtime": 1541345605093
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1541429074980
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1538779637905
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-docgen-typescript-loader/dist/index.js",
      "mtime": 1541429075984
    }
  ],
  "contextDependencies": [],
  "result": [
    "var _jsxFileName = \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/App/index.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * App container\n *\n * Main container of the app, handles global state,\n * authentication provider (Google) and routing\n *\n */\nimport * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport * as Immutable from \"immutable\";\nimport { auth } from \"firebase\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ChatRooms from \"../ChatRooms/ChatRooms\";\nimport NotFound from \"../NotFoundPage/NotFound\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport ProtectedRoute from \"../ProtectedRoute\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport firebase from \"../../secretApiInfo/firebase\";\nimport placeholderAvatarJpg from \"../../assets/placeholderImages/placeholderAvatar.jpg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      data: Immutable.Map({\n        authUser: \"Guest User\",\n        isAuthenticaded: true,\n        profilePicture: placeholderAvatarJpg,\n        userUniqueID: String(\"\")\n      }),\n      firebaseConfig: firebase\n    };\n    return _this;\n  } // google provider method\n\n\n  _createClass(App, [{\n    key: \"googleAuthentication\",\n    value: function googleAuthentication(event) {\n      var _this2 = this;\n\n      var data = this.state.data;\n      event.preventDefault();\n      var googleProvider = new auth.GoogleAuthProvider();\n      var googleAuth = firebase.auth();\n      googleAuth // sends user to a new tab to authenticate with Google\n      .signInWithPopup(googleProvider) // when done, sets state based on user information credentials\n      .then(function (result) {\n        _this2.setState({\n          data: data.set(\"isAuthenticaded\", true).set(\"authUser\", result.additionalUserInfo.profile.name).set(\"profilePicture\", result.additionalUserInfo.profile.picture).set(\"userUniqueID\", result.additionalUserInfo.profile.id)\n        });\n      }) // catch any errors on the auth method\n      // TODO: maybe redirect to a login error page?\n      .catch(function (error) {\n        return console.error(error.message);\n      });\n    } // logs out user from the app\n\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout(event) {\n      var _this3 = this;\n\n      var data = this.state.data;\n      event.preventDefault();\n      var googleAuth = firebase.auth();\n      googleAuth.signOut() // when done, clears user information and sets state to default\n      .then(function () {\n        _this3.setState({\n          data: data.set(\"isAuthenticaded\", false).set(\"authUser\", \"Guest User\").set(\"profilePicture\", placeholderAvatarJpg).set(\"userUniqueID\", String(\"\"))\n        });\n      }) // catch any errors on the auth method\n      .catch(function (error) {\n        return console.error(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          firebaseConfig = _this$state.firebaseConfig;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Helmet, {\n        titleTemplate: \"%s - Slack Chat\",\n        defaultTitle: \"Slack Chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"meta\", {\n        name: \"description\",\n        content: \"A clone(ish) of the Slack application\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(ProtectedRoute, {\n        isAuthenticated: data.get(\"isAuthenticaded\"),\n        path: \"/application\" // TODO: refactor to not use Lambda\n        ,\n        component: function component() {\n          return (// passing down state to chatrooms as props\n            React.createElement(ChatRooms, {\n              firebase: firebaseConfig,\n              displayName: data.get(\"authUser\"),\n              displayImage: data.get(\"profilePicture\"),\n              userUniqueID: data.get(\"userUniqueID\"),\n              logout: function logout(event) {\n                return _this4.handleLogout(event);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            })\n          );\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: function component() {\n          return React.createElement(LoginPage // if user is not logged in, redirect route to login page\n          , {\n            isAuthenticated: data.get(\"isAuthenticaded\"),\n            authenticateWithGoogle: function authenticateWithGoogle(event) {\n              return _this4.googleAuthentication(event);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/404\",\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: \"*\",\n        to: \"/404\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar _default = App;\nexport default _default;\n\ntry {\n  // @ts-ignore\n  App.displayName = \"App\"; // @ts-ignore\n\n  App.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"App\",\n    \"props\": {}\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/containers/App/index.tsx#App\"] = {\n      docgenInfo: App.__docgenInfo,\n      name: \"App\",\n      path: \"src/containers/App/index.tsx#App\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(App, \"App\", \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/App/index.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/App/index.tsx\");\n  leaveModule(module);\n})();\n\n;",
    {
      "version": 3,
      "sources": [
        "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/App/index.tsx"
      ],
      "names": [
        "React",
        "Helmet",
        "Immutable",
        "auth",
        "Switch",
        "Route",
        "Redirect",
        "ChatRooms",
        "NotFound",
        "LoginPage",
        "ProtectedRoute",
        "LandingPage",
        "firebase",
        "placeholderAvatarJpg",
        "App",
        "props",
        "state",
        "data",
        "Map",
        "authUser",
        "isAuthenticaded",
        "profilePicture",
        "userUniqueID",
        "String",
        "firebaseConfig",
        "event",
        "preventDefault",
        "googleProvider",
        "GoogleAuthProvider",
        "googleAuth",
        "signInWithPopup",
        "then",
        "result",
        "setState",
        "set",
        "additionalUserInfo",
        "profile",
        "name",
        "picture",
        "id",
        "catch",
        "error",
        "console",
        "message",
        "signOut",
        "get",
        "handleLogout",
        "googleAuthentication",
        "Component",
        "displayName",
        "__docgenInfo",
        "STORYBOOK_REACT_CLASSES",
        "docgenInfo",
        "path",
        "__react_docgen_typescript_loader_error"
      ],
      "mappings": "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",
      "sourcesContent": [
        "/**\n * App container\n *\n * Main container of the app, handles global state,\n * authentication provider (Google) and routing\n *\n */\n\nimport * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport * as Immutable from \"immutable\";\nimport { auth } from \"firebase\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ChatRooms from \"../ChatRooms/ChatRooms\";\nimport NotFound from \"../NotFoundPage/NotFound\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport ProtectedRoute from \"../ProtectedRoute\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport firebase from \"../../secretApiInfo/firebase\";\nimport placeholderAvatarJpg from \"../../assets/placeholderImages/placeholderAvatar.jpg\";\n\ninterface IAppState {\n  data: Immutable.Map<string, any>;\n  firebaseConfig: object;\n}\n\nclass App extends React.Component<{}, IAppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      data: Immutable.Map({\n        authUser: \"Guest User\",\n        isAuthenticaded: true,\n        profilePicture: placeholderAvatarJpg,\n        userUniqueID: String(\"\")\n      }),\n      firebaseConfig: firebase\n    };\n  }\n\n  // google provider method\n  googleAuthentication(event: any) {\n    const { data } = this.state;\n    event.preventDefault();\n    const googleProvider = new auth.GoogleAuthProvider();\n    const googleAuth = firebase.auth();\n\n    googleAuth\n      // sends user to a new tab to authenticate with Google\n      .signInWithPopup(googleProvider)\n      // when done, sets state based on user information credentials\n      .then((result: any) => {\n        this.setState({\n          data: data\n            .set(\"isAuthenticaded\", true)\n            .set(\"authUser\", result.additionalUserInfo.profile.name)\n            .set(\"profilePicture\", result.additionalUserInfo.profile.picture)\n            .set(\"userUniqueID\", result.additionalUserInfo.profile.id)\n        });\n      })\n      // catch any errors on the auth method\n      // TODO: maybe redirect to a login error page?\n      .catch((error: any) => console.error(error.message));\n  }\n\n  // logs out user from the app\n  handleLogout(event: any) {\n    const { data } = this.state;\n    event.preventDefault();\n    const googleAuth = firebase.auth();\n\n    googleAuth\n      .signOut()\n      // when done, clears user information and sets state to default\n      .then(() => {\n        this.setState({\n          data: data\n            .set(\"isAuthenticaded\", false)\n            .set(\"authUser\", \"Guest User\")\n            .set(\"profilePicture\", placeholderAvatarJpg)\n            .set(\"userUniqueID\", String(\"\"))\n        });\n      })\n      // catch any errors on the auth method\n      .catch((error: any) => console.error(error.message));\n  }\n\n  render() {\n    const { data, firebaseConfig } = this.state;\n    return (\n      <React.Fragment>\n        <Helmet titleTemplate=\"%s - Slack Chat\" defaultTitle=\"Slack Chat\">\n          <meta\n            name=\"description\"\n            content=\"A clone(ish) of the Slack application\"\n          />\n        </Helmet>\n        <Switch>\n          <Route exact={true} path=\"/\" component={LandingPage} />\n          <ProtectedRoute\n            isAuthenticated={data.get(\"isAuthenticaded\")}\n            path=\"/application\"\n            // TODO: refactor to not use Lambda\n            component={() => (\n              // passing down state to chatrooms as props\n              <ChatRooms\n                firebase={firebaseConfig}\n                displayName={data.get(\"authUser\")}\n                displayImage={data.get(\"profilePicture\")}\n                userUniqueID={data.get(\"userUniqueID\")}\n                logout={(event: any) => this.handleLogout(event)}\n              />\n            )}\n          />\n          <Route\n            path=\"/login\"\n            component={() => (\n              <LoginPage\n                // if user is not logged in, redirect route to login page\n                isAuthenticated={data.get(\"isAuthenticaded\")}\n                authenticateWithGoogle={(event: any) =>\n                  this.googleAuthentication(event)\n                }\n              />\n            )}\n          />\n          {/* if route doesn't exists, redirect to 404  */}\n          <Route path=\"/404\" component={NotFound} />\n          <Redirect from=\"*\" to=\"/404\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\ntry {\n    // @ts-ignore\n    App.displayName = \"App\";\n    // @ts-ignore\n    App.__docgenInfo = { \"description\": \"\", \"displayName\": \"App\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/App/index.tsx#App\"] = { docgenInfo: App.__docgenInfo, name: \"App\", path: \"src/containers/App/index.tsx#App\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"
      ]
    }
  ]
}
