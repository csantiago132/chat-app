{
  "remainingRequest": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/ProtectedRoute/index.tsx",
  "dependencies": [
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/ProtectedRoute/index.tsx",
      "mtime": 1541108596624
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js",
      "mtime": 1541429074980
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1538779637905
    },
    {
      "path": "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/node_modules/react-docgen-typescript-loader/dist/index.js",
      "mtime": 1541429075984
    }
  ],
  "contextDependencies": [],
  "result": [
    "var _jsxFileName = \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/ProtectedRoute/index.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * ProtectedRoute\n *\n * controls if you can see the main application,\n * reads state to see if isAuthenticated is true, if so,\n * user can navigate to ChatRooms page, if not, redirects user to\n * LoginPage and start the auth process through firebase\n *\n */\nimport * as React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Find the component property defined on props\n// (lowercase component) and assign it to a new location\n// in state we call Component.\n// Then, take all remaining properties defined on the\nvar ProtectedRoute = function ProtectedRoute(_ref) {\n  var component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\"]);\n\n  return (// pulling off the 'rest' of the properties defined\n    // into a new argument called rest.\n    React.createElement(Route, Object.assign({}, rest, {\n      render: function render(props) {\n        return isAuthenticated ? // if authenticated, render component passed as prop\n        React.createElement(component, props) : // otherwise, redirect to login\n        React.createElement(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))\n  );\n};\n\nvar _default = ProtectedRoute;\nexport default _default;\n\ntry {\n  // @ts-ignore\n  ProtectedRoute.displayName = \"ProtectedRoute\"; // @ts-ignore\n\n  ProtectedRoute.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"ProtectedRoute\",\n    \"props\": {\n      \"component\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"component\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(...arg: any[]) => any\"\n        }\n      },\n      \"isAuthenticated\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"isAuthenticated\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"location\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"location\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      },\n      \"path\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"path\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/containers/ProtectedRoute/index.tsx#ProtectedRoute\"] = {\n      docgenInfo: ProtectedRoute.__docgenInfo,\n      name: \"ProtectedRoute\",\n      path: \"src/containers/ProtectedRoute/index.tsx#ProtectedRoute\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ProtectedRoute, \"ProtectedRoute\", \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/ProtectedRoute/index.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/ProtectedRoute/index.tsx\");\n  leaveModule(module);\n})();\n\n;",
    {
      "version": 3,
      "sources": [
        "/Users/carlossantiago/Dropbox/_Local/Github/slack-chat/src/containers/ProtectedRoute/index.tsx"
      ],
      "names": [
        "React",
        "Route",
        "Redirect",
        "ProtectedRoute",
        "component",
        "isAuthenticated",
        "rest",
        "props",
        "createElement",
        "pathname",
        "state",
        "from",
        "location",
        "displayName",
        "__docgenInfo",
        "STORYBOOK_REACT_CLASSES",
        "docgenInfo",
        "name",
        "path",
        "__react_docgen_typescript_loader_error"
      ],
      "mappings": ";;;;;;;;;;;;AAAA;;;;;;;;;AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAQA;AACA;AACA;AACA;AAEA,IAAMC,cAA0C,GAAG,SAA7CA,cAA6C;AAAA,MACjDC,SADiD,QACjDA,SADiD;AAAA,MAEjDC,eAFiD,QAEjDA,eAFiD;AAAA,MAG9CC,IAH8C;;AAAA,SAKjD;AACA;AACA,wBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,eACNF,eAAe,GACb;AACAL,QAAAA,KAAK,CAACQ,aAAN,CAAoBJ,SAApB,EAA+BG,KAA/B,CAFa,GAIb;AACA,4BAAC,QAAD;AACE,UAAA,EAAE,EAAE;AAAEE,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAA7B,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANI;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPiD;AAAA,CAAnD;;eAuBeT,c;AAAf;;AACA,IAAI;AACA;AACAA,EAAAA,cAAc,CAACU,WAAf,GAA6B,gBAA7B,CAFA,CAGA;;AACAV,EAAAA,cAAc,CAACW,YAAf,GAA8B;AAAE,mBAAe,EAAjB;AAAqB,mBAAe,gBAApC;AAAsD,aAAS;AAAE,mBAAa;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,WAAnD;AAAgE,oBAAY,IAA5E;AAAkF,gBAAQ;AAAE,kBAAQ;AAAV;AAA1F,OAAf;AAAiJ,yBAAmB;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,iBAAnD;AAAsE,oBAAY,IAAlF;AAAwF,gBAAQ;AAAE,kBAAQ;AAAV;AAAhG,OAApK;AAA6R,kBAAY;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,UAAnD;AAA+D,oBAAY,KAA3E;AAAkF,gBAAQ;AAAE,kBAAQ;AAAV;AAA1F,OAAzS;AAAwZ,cAAQ;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,MAAnD;AAA2D,oBAAY,IAAvE;AAA6E,gBAAQ;AAAE,kBAAQ;AAAV;AAArF;AAAha;AAA/D,GAA9B,CAJA,CAKA;;AACA,MAAI,OAAOC,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,wDAAD,CAAvB,GAAoF;AAAEC,MAAAA,UAAU,EAAEb,cAAc,CAACW,YAA7B;AAA2CG,MAAAA,IAAI,EAAE,gBAAjD;AAAmEC,MAAAA,IAAI,EAAE;AAAzE,KAApF;AACP,CATD,CAUA,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;;;0BAlC5ChB,c",
      "sourcesContent": [
        "/**\n * ProtectedRoute\n *\n * controls if you can see the main application,\n * reads state to see if isAuthenticated is true, if so,\n * user can navigate to ChatRooms page, if not, redirects user to\n * LoginPage and start the auth process through firebase\n *\n */\nimport * as React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\ninterface IProtectedRoute {\n  component: (...arg: any[]) => any;\n  isAuthenticated: boolean;\n  location?: any;\n  path: string;\n}\n// Find the component property defined on props\n// (lowercase component) and assign it to a new location\n// in state we call Component.\n// Then, take all remaining properties defined on the\n// props object and collect them inside an argument called {...rest}\nconst ProtectedRoute: React.SFC<IProtectedRoute> = ({\n  component,\n  isAuthenticated,\n  ...rest\n}) => (\n  // pulling off the 'rest' of the properties defined\n  // into a new argument called rest.\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated ? (\n        // if authenticated, render component passed as prop\n        React.createElement(component, props)\n      ) : (\n        // otherwise, redirect to login\n        <Redirect\n          to={{ pathname: \"/login\", state: { from: props.location } }}\n        />\n      )\n    }\n  />\n);\n\nexport default ProtectedRoute;\ntry {\n    // @ts-ignore\n    ProtectedRoute.displayName = \"ProtectedRoute\";\n    // @ts-ignore\n    ProtectedRoute.__docgenInfo = { \"description\": \"\", \"displayName\": \"ProtectedRoute\", \"props\": { \"component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"component\", \"required\": true, \"type\": { \"name\": \"(...arg: any[]) => any\" } }, \"isAuthenticated\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isAuthenticated\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"location\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"location\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"path\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"path\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/containers/ProtectedRoute/index.tsx#ProtectedRoute\"] = { docgenInfo: ProtectedRoute.__docgenInfo, name: \"ProtectedRoute\", path: \"src/containers/ProtectedRoute/index.tsx#ProtectedRoute\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"
      ]
    }
  ]
}
